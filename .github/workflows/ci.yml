name: CI

on:
  push:
    branches:
      - main
      - "dev/*"
  pull_request:
    branches: [main]

# Ensure only one workflow runs per ref/PR at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-typecheck-test-build:
    name: Lint, Type Check, Test, and Build
    runs-on: ubuntu-latest

    env:
      POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test

    # services:
    #   postgres:
    #     image: postgres:17
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: test
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.18.2" # Using version from volta config

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "9.15.4" # Using version from packageManager field
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Paraglide compile (i18n)
        run: pnpm exec paraglide-js compile --project ./project.inlang --outdir ./src/lib/paraglide

      - name: Run Prettier check
        run: pnpm run lint

      # - name: Run TypeScript check
      #   run: pnpm run check

      - name: Run tests
        run: pnpm run test

      - name: Build application
        run: pnpm run build
